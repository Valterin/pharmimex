Функция СведенияОВнешнейОбработке() Экспорт
 
 ПараметрыРегистрации = Новый Структура;
 МассивНазначений = Новый Массив;
 
//	МассивНазначений.Добавить("подсистема.CRMИМАРКЕТИНГ"); //Указываем документ к которому делаем внешнюю печ. форму
 ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет"); //может быть - ПечатнаяФорма, ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов...
//ПараметрыРегистрации.Вставить("Назначение",		МассивНазначений);
 ПараметрыРегистрации.Вставить("Наименование", "Отчет сроки оплат по договорам"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
 ПараметрыРегистрации.Вставить("БезопасныйРежим",ИСТИНА);
 ПараметрыРегистрации.Вставить("Информация", "Отчет сроки оплат по договорам");
 ПараметрыРегистрации.Вставить("Версия", "1.0");    
 
 ТаблицаКоманд = ПолучитьТаблицуКоманд();
 ДобавитьКоманду(ТаблицаКоманд, "Отчет сроки оплат по договорам", "СрокиОплатПоДоговорам", "ОткрытиеФормы");
 ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
 
 Возврат ПараметрыРегистрации;
 
КонецФункции
 
Функция ПолучитьТаблицуКоманд()
 Команды = Новый ТаблицаЗначений;
 Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
 Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
 Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
 Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
 Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
 
 Возврат Команды;
КонецФункции
 
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
 
 НоваяКоманда = ТаблицаКоманд.Добавить();
 НоваяКоманда.Представление = Представление;  
 НоваяКоманда.Идентификатор = Идентификатор;
 НоваяКоманда.Использование = Использование;
 НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
 НоваяКоманда.Модификатор = Модификатор;
 
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
		
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
	Параметр=Настройки.ПараметрыДанных.Элементы.Найти("Период");	
	Если РазницаДаты(Параметр.Значение.ДатаНачала, Параметр.Значение.ДатаОкончания) Тогда 
		ОбщегоНазначения.СообщитьПользователю("Данный период превышает 366 дней!");
        Возврат;
    КонецЕсли;
   		
    КомпоновщикМакет = Новый КомпоновщикМакетаКомпоновкиДанных;
    Макет = КомпоновщикМакет.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);	
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(Макет, , ДанныеРасшифровки);
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры 

Функция РазницаДаты(ДатаНачала, ДатаОкончания)
	
	РазницаВДнях = (НачалоДня(ДатаОкончания) - НачалоДня(ДатаНачала)) / (60 * 60 * 24); 
	
	Если РазницаВДнях > 366 Тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
