
#Область ОбработчикиСобытийЭлементовСтраницы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Объект.Серия.Очистить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодобратьСерииУстановка(Команда)
	
	//+Dima@ASAP, 8 января 2025 г. 10:48:19 LE-026 Блокировка запасов
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ПодобратьСерииУстановкаНаСервере();
		ПодборСерииСообщение();
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните организацию.'"), , "Объект.Организация");
	КонецЕсли;
	//+/Dima@ASAP, 8 января 2025 г. 10:48:19
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСерииОтозвать(Команда)
	
	//+Dima@ASAP, 8 января 2025 г. 10:48:13 LE-026 Блокировка запасов	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните организацию.'"), , "Объект.Организация"); 
	Иначе
		ПодобратьСерииОтозватьНаСервере(); 
		ПодборСерииСообщение();
	КонецЕсли;	 	
	//+/Dima@ASAP, 8 января 2025 г. 10:48:13
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРазрешение(Команда)
	
	//+Dima@ASAP, 8 января 2025 г. 10:48:08 LE-026 Блокировка запасов
	УстановитьРазрешениеНаСервере();
	ОчиститьСообщения();
	ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Количество серий, разрешенных к продаже: %1", Объект.Серия.Количество()));
	//+/Dima@ASAP, 8 января 2025 г. 10:48:08
	
КонецПроцедуры

&НаКлиенте
Процедура ОтозватьРазрешения(Команда)
	
	//+Dima@ASAP, 8 января 2025 г. 10:48:01 LE-026 Блокировка запасов
	ПроверкаОрганизация = Истина;
	ПроверкаДатаДокумента = Истина;
	ПроверкаДокументаОснования = Истина;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните организацию.'"), , "Объект.Организация");
		ПроверкаОрганизация = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаДокументаОснования) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните дату документа.'"), , "Объект.ДатаДокументаОснования");
		ПроверкаДатаДокумента = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните документ основание.'"), , "Объект.ДокументОснование");
		ПроверкаДокументаОснования = Ложь;
	КонецЕсли;
	
	Если ПроверкаОрганизация И ПроверкаДатаДокумента И ПроверкаДокументаОснования Тогда 
		ОтозватьРазрешенияНаСервере();
		ОчиститьСообщения();
	    ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Количество серий, для которых отозвано разрешение на продажу: %1", Объект.Серия.Количество()));
	КонецЕсли;
	//+/Dima@ASAP, 8 января 2025 г. 10:48:01
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьПродажу(Команда)
	РазрешитьПродажуНаСервере();
	ОчиститьСообщения();
	ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Количество серий, для которых установлено повторное разрешение на продажу: %1", Объект.Серия.Количество()));
КонецПроцедуры  

&НаКлиенте
Процедура ПодобратьСерииПовторно(Команда)	
	//+Dima@ASAP, 8 января 2025 г. 10:47:44 LE-026 Блокировка запасов
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните организацию.'"), , "Объект.Организация");
	Иначе
		ПодобратьСерииПовторноНаСервере();
		ПодборСерииСообщение();
	КонецЕсли;
	//+/Dima@ASAP, 8 января 2025 г. 10:47:44	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодобратьСерииУстановкаНаСервере()
	
	//+Dima@ASAP, 6 января 2025 г. 15:56:49 LE-026 Блокировка запасов
	Объект.Серия.Очистить();
	
	ЗаменаТекста = "";
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия.ГоденДо КАК ГоденДо
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.PhErpСтатусыСерийНоменклатуры КАК PhErpСтатусыСерийНоменклатуры
	|		ПО ТоварыОрганизаций.Организация = PhErpСтатусыСерийНоменклатуры.Организация
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия = PhErpСтатусыСерийНоменклатуры.Серия
	|ГДЕ
	|	ТоварыОрганизаций.ВидДвижения = &ВидДвижения
	|	И ТоварыОрганизаций.Организация = &Организация
	|	И НЕ ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПередачаСырьяПереработчику
	|	И НЕ ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|	И НЕ ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ОтчетПереработчика2_5
	|	И ЕСТЬNULL(PhErpСтатусыСерийНоменклатуры.РазрешениеНаПродажу, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|	И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия <> &Серия
	|	И &ЗаменаТекста";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		Запрос.УстановитьПараметр("ДатаНачала", Объект.Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Объект.Период.ДатаОкончания);
		ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.Период МЕЖДУ &ДатаНачала И &ДатаОкончания";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Поставщик) Тогда 
		Если ТипЗнч(Объект.Поставщик) = Тип("СправочникСсылка.Организации") Тогда 
			Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами);
			Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);	
			
			ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.Регистратор.Организация = &Поставщик
			|	И (ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
            |			ИЛИ ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПрочееОприходованиеТоваров)
			|	И ТоварыОрганизаций.Регистратор.ОрганизацияПолучатель = &Организация
			|	И ТоварыОрганизаций.Регистратор.ХозяйственнаяОперация = &ХозяйственнаяОперация";
		Иначе
			Запрос.УстановитьПараметр("Поставщик", Объект.Поставщик);
			ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.Регистратор.Контрагент  = &Поставщик";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Накладная) Тогда
		Запрос.УстановитьПараметр("Накладная", Объект.Накладная);
		ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.Регистратор = &Накладная";
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.СерияПроизводителя) Тогда 
		Запрос.УстановитьПараметр("СерияПроизводителя", Объект.СерияПроизводителя);
		ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия.PhErpСерияПроизводителя = &СерияПроизводителя";	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда		
		Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
		ЗаменаТекста = ЗаменаТекста + " И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура";		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ЗаменаТекста", ЗаменаТекста);
	
	Объект.Серия.Загрузить(Запрос.Выполнить().Выгрузить());
	//+/Dima@ASAP, 6 января 2025 г. 15:56:49
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьСерииОтозватьНаСервере()
	
	//+Dima@ASAP, 6 января 2025 г. 15:57:00 LE-026 Блокировка запасов
	Объект.Серия.Очистить();
	
	ЗаменаТекста = "";
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	PhErpСтатусыСерийНоменклатуры.Серия КАК Серия,
	|	PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура КАК Номенклатура,
	|	PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура.Артикул КАК Артикул,
	|	PhErpСтатусыСерийНоменклатуры.Серия.ГоденДо КАК ГоденДо
	|ИЗ
	|	РегистрСведений.PhErpСтатусыСерийНоменклатуры КАК PhErpСтатусыСерийНоменклатуры
	|ГДЕ
	|	PhErpСтатусыСерийНоменклатуры.РазрешениеНаПродажу
	|	И PhErpСтатусыСерийНоменклатуры.Организация = &Организация
	|	И &ЗаменаТекста";
	
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Если ЗначениеЗаполнено(Объект.СерияПроизводителя) Тогда
	Запрос.УстановитьПараметр("СерияПроизводителя", Объект.СерияПроизводителя);	
	ЗаменаТекста = ЗаменаТекста + "	И PhErpСтатусыСерийНоменклатуры.Серия.PhErpСерияПроизводителя = &СерияПроизводителя";	
    КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);	
	ЗаменаТекста = ЗаменаТекста + "	И PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура = &Номенклатура";	
    КонецЕсли; 
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ЗаменаТекста", ЗаменаТекста);
	
	Объект.Серия.Загрузить(Запрос.Выполнить().Выгрузить());
	//+/Dima@ASAP, 6 января 2025 г. 15:57:00
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРазрешениеНаСервере()
	
	//+Dima@ASAP, 6 января 2025 г. 15:56:34 LE-026 Блокировка запасов
	НачатьТранзакцию();
	Попытка						
		Для Каждого Стр Из Объект.Серия  Цикл
			НаборЗаписей = РегистрыСведений.PhErpСтатусыСерийНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Серия.Установить(Стр.Серия);
			НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
			НаборЗаписей.Прочитать();
			Если  НаборЗаписей.Количество() = 0  Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Серия = Стр.Серия;
				НоваяЗапись.Организация = Объект.Организация; 
				НоваяЗапись.РазрешениеНаПродажу = Истина; 
				НаборЗаписей[0].Основание = ""; 
				НаборЗаписей[0].ДатаОснования =  Дата(1, 1, 1, 0, 0, 0);
			Иначе
				НаборЗаписей[0].Серия = Стр.Серия;
				НаборЗаписей[0].Организация = Объект.Организация;
				НаборЗаписей[0].РазрешениеНаПродажу = Истина;
				НаборЗаписей[0].Основание = ""; 
				НаборЗаписей[0].ДатаОснования = Дата(1, 1, 1, 0, 0, 0);
			КонецЕсли;  
			НаборЗаписей.Записать();	
		КонецЦикла; 				
		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	//+/Dima@ASAP, 6 января 2025 г. 15:56:34
	
КонецПроцедуры

&НаСервере
Процедура ОтозватьРазрешенияНаСервере()
	
	//+Dima@ASAP, 6 января 2025 г. 15:56:40 LE-026 Блокировка запасов
	НачатьТранзакцию();
	Попытка			
		Для Каждого Стр Из Объект.Серия  Цикл  
			НаборЗаписей = РегистрыСведений.PhErpСтатусыСерийНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Серия.Установить(Стр.Серия);
			НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
			НаборЗаписей.Прочитать();
			НаборЗаписей[0].Серия = Стр.Серия;
			НаборЗаписей[0].Организация = Объект.Организация; 
			НаборЗаписей[0].РазрешениеНаПродажу = Ложь; 
			НаборЗаписей[0].Основание = Объект.ДокументОснование; 
			НаборЗаписей[0].ДатаОснования = Объект.ДатаДокументаОснования;
			НаборЗаписей.Записать();
		КонецЦикла; 				
		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	//+/Dima@ASAP, 6 января 2025 г. 15:56:40
	
КонецПроцедуры

&НаСервере
Процедура РазрешитьПродажуНаСервере()
	
	//+Dima@ASAP, 8 января 2025 г. 10:47:22 LE-026 Блокировка запасов
	НачатьТранзакцию();
	Попытка			
		Для Каждого Стр Из Объект.Серия  Цикл  
			НаборЗаписей = РегистрыСведений.PhErpСтатусыСерийНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Серия.Установить(Стр.Серия);
			НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
			НаборЗаписей.Прочитать();
			НаборЗаписей[0].Серия = Стр.Серия;
			НаборЗаписей[0].Организация = Объект.Организация; 
			НаборЗаписей[0].РазрешениеНаПродажу = Истина; 
			НаборЗаписей[0].Основание = ""; 
			НаборЗаписей[0].ДатаОснования = Дата(1, 1, 1, 0, 0, 0);
			НаборЗаписей.Записать();
		КонецЦикла; 				
		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	//+/Dima@ASAP, 8 января 2025 г. 10:47:22
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьСерииПовторноНаСервере()
	
	//+Dima@ASAP, 8 января 2025 г. 10:47:13 LE-026 Блокировка запасов
	Объект.Серия.Очистить(); 
	
	ЗаменаТекста = "";
	
	Запрос = Новый Запрос;	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	PhErpСтатусыСерийНоменклатуры.Серия КАК Серия,
	|	PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура КАК Номенклатура,
	|	PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура.Артикул КАК Артикул,
	|	PhErpСтатусыСерийНоменклатуры.Серия.ГоденДо КАК ГоденДо
	|ИЗ
	|	РегистрСведений.PhErpСтатусыСерийНоменклатуры КАК PhErpСтатусыСерийНоменклатуры
	|ГДЕ
	|	НЕ PhErpСтатусыСерийНоменклатуры.РазрешениеНаПродажу
	|	И PhErpСтатусыСерийНоменклатуры.Организация = &Организация
	|   И &ЗаменаТекста";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация); 
	
	Если ЗначениеЗаполнено(Объект.СерияПроизводителя) Тогда
	Запрос.УстановитьПараметр("СерияПроизводителя", Объект.СерияПроизводителя);	
	ЗаменаТекста = ЗаменаТекста + "	И PhErpСтатусыСерийНоменклатуры.Серия.PhErpСерияПроизводителя = &СерияПроизводителя";	
    КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);	
	ЗаменаТекста = ЗаменаТекста + "	И PhErpСтатусыСерийНоменклатуры.Серия.PhErpНоменклатура = &Номенклатура";	
    КонецЕсли; 
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &ЗаменаТекста", ЗаменаТекста);
	
	Объект.Серия.Загрузить(Запрос.Выполнить().Выгрузить());
	//+/Dima@ASAP, 8 января 2025 г. 10:47:13
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСерииСообщение()
	     ОчиститьСообщения();
	     ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Количество серий найденных по запросу: %1", Объект.Серия.Количество()));
КонецПроцедуры

#КонецОбласти
