Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.ПроизвольныйКадровыйПриказ"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); 	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "МатериальнаяПомощьАОФармимэкс"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0");       
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Материальная помощь АО Фармимэкс", "МатериальнаяПомощьАОФармимэкс", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;  
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МатериальнаяПомощьАОФармимэкс", "Материальная помощь АО Фармимэкс", СформироватьПечатнуюФорму(МассивОбъектов[0], ОбъектыПечати));
	
КонецПроцедуры // Печать()

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриказОВыплатеМатериальнойПомощи";
	ДокументРезультат.ОриентацияСтраницы= ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	
	Макет = ПолучитьМакет("ПФ_MXL_ПриказОВыплатеМатериальнойПомощи");
	ОбластьМакета = Макет.ПолучитьОбласть("Приказ");
	
	ТаблицаЗначений = МассивОбъектов.ЗначенияРеквизитов.Выгрузить();
	МатериальнаяПомощь = НайтиПоШаблонуПВХ(МассивОбъектов.Шаблон, "Материальная помощь");
	МотивВыплаты = НайтиПоШаблонуПВХ(МассивОбъектов.Шаблон, "Мотив выплаты");
	ОснованиеВыплаты    = НайтиПоШаблонуПВХ(МассивОбъектов.Шаблон, "Основание"); 
	ПодписантКадровыхДокументов1  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"PhZup_Подписант1");
	ПодписантКадровыхДокументов2  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"PhZup_Подписант2");
	ПодписантКадровыхДокументов3  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту(
	"Имя",
	"PhZup_Подписант3");
	
	
	// Запомним номер строки, с которой начали выводить текущий документ.
	НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
	
	Для Каждого ДанныеПечати Из МассивОбъектов.Сотрудники Цикл
		НачалоБланка = ДокументРезультат.ВысотаТаблицы + 1;
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		
		КадровыеДанны                                        = КадровыйУчет.КадровыеДанныеСотрудника(Истина,                       ДанныеПечати.Сотрудник, "Подразделение, Должность", МассивОбъектов.Дата);
		ОбластьМакета.Параметры.Заполнить(КадровыеДанны);
		ОбластьМакета.Параметры.НазваниеОрганизации          = МассивОбъектов.Организация;
		ОбластьМакета.Параметры.НомерДокумента               = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(МассивОбъектов.Номер, Истина,                 Истина);
		ОбластьМакета.Параметры.ДатаДокумента                = Формат(МассивОбъектов.Дата,                                         "ДЛФ=D");
		ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ДанныеПечати.Сотрудник),                                                    3,
		ОбластьМакета.Параметры.СотрудникФИО,                                                                                      ДанныеПечати.Сотрудник.ФизическоеЛицо.Пол);
		ОбластьМакета.Параметры.МатериальнаяПомощь           = НайтиЗначениеПВХ(ДанныеПечати.НомерСтроки,                          МатериальнаяПомощь,     ТаблицаЗначений);
		ОбластьМакета.Параметры.МотивВыплаты                 = НайтиЗначениеПВХ(0,                                                 МотивВыплаты,           ТаблицаЗначений);
		ОбластьМакета.Параметры.ОснованиеВыплаты             = НайтиЗначениеПВХ(0,                                                 ОснованиеВыплаты,       ТаблицаЗначений);
		ОбластьМакета.Параметры.ДатаДокумента                = Формат(МассивОбъектов.Дата,                                         "ДЛФ=DD");
		ОбластьМакета.Параметры.ПодписантКадровыхДокументов1 = УправлениеСвойствами.ЗначениеСвойства(МассивОбъектов.Организация,   ПодписантКадровыхДокументов1);
		ОбластьМакета.Параметры.ПодписантКадровыхДокументов2 = УправлениеСвойствами.ЗначениеСвойства(МассивОбъектов.Организация,   ПодписантКадровыхДокументов2);
		ОбластьМакета.Параметры.ПодписантКадровыхДокументов3 = УправлениеСвойствами.ЗначениеСвойства(МассивОбъектов.Организация,   ПодписантКадровыхДокументов3);
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	// В табличном документе необходимо задать имя области, в которую был 
	// выведен объект. Нужно для возможности печати покомплектно.
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов.Ссылка);
	
	
	Возврат ДокументРезультат;
	
	
КонецФункции     


Функция НайтиЗначениеПВХ(ИдентификаторСтроки, Реквизит, ТаблицаЗначений) 
	
	СтруктураПоиска = Новый  Структура(); 
	СтруктураПоиска.Вставить("ИдентификаторСтроки", ИдентификаторСтроки);
	СтруктураПоиска.Вставить("Реквизит", Реквизит);
	
	МассивНайденныхСтрок = ТаблицаЗначений.НайтиСтроки(СтруктураПоиска);
	
	Если МассивНайденныхСтрок.Количество()  = 0 Тогда
		Возврат "";
	Иначе                                                                                    	
		Возврат МассивНайденныхСтрок[0].Значение;
	КонецЕсли; 
	
КонецФункции  

Функция НайтиПоШаблонуПВХ(Шаблон, Наименование)

	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РеквизитыПроизвольныхКадровыхПриказов.Ссылка КАК Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.РеквизитыПроизвольныхКадровыхПриказов КАК РеквизитыПроизвольныхКадровыхПриказов
	|ГДЕ
	|	РеквизитыПроизвольныхКадровыхПриказов.Шаблон = &Шаблон
	|	И РеквизитыПроизвольныхКадровыхПриказов.Наименование = &Наименование
	|	И НЕ РеквизитыПроизвольныхКадровыхПриказов.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Ссылка; 
	
КонецФункции






