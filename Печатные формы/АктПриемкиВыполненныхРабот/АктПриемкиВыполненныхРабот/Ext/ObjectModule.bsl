Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.АктПриемкиВыполненныхРаботОказанныхУслуг");
	МассивНазначений.Добавить("Документ.ДоговорРаботыУслуги"); //Указываем документ к которому делаем внешнюю печ. форму
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); 	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "АктПриемкиВыполненныхРабот"); //имя под которым обработка будет зарегестрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Версия", "1.0");       
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, "Акт приемки выполненных работ АО Фармимэкс", "АктПриемкиВыполненныхРабот", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));//как будет выглядеть описание печ.формы для пользователя
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); //имя макета печ.формы
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); //ВызовСерверногоМетода
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;  
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктПриемкиВыполненныхРабот", "Акт приемки выполненных работ АО Фармимэкс", СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
	
КонецПроцедуры // Печать()

Функция СформироватьПечатнуюФорму(СсылкаНаДокумент, ОбъектыПечати)Экспорт
	
	ДокументРезультат = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	
	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктПриемаПередачиВыполненныхРаботУслуг";
	ДокументРезультат.ОриентацияСтраницы= ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Акт");
	
	// получаем данные для печати
	ДанныеДляПечатиАктаСдачиПриемаВыполненныхРаботУслуг = ДанныеДляПечатиАктаСдачиПриемаВыполненныхРаботУслуг(СсылкаНаДокумент);
	Если ДанныеДляПечатиАктаСдачиПриемаВыполненныхРаботУслуг = Неопределено Тогда
		Возврат ДокументРезультат;
	КонецЕсли;
	ДанныеДляПечати = ДанныеДляПечатиАктаСдачиПриемаВыполненныхРаботУслуг.Выбрать();
	
	ПервыйДокумент = Истина;
	Пока ДанныеДляПечати.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			// Все документы нужно выводить на разных страницах.
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ДокументРезультат.ВысотаТаблицы + 1;
		
		ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
			
		Если ДанныеДляПечати.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
		    ОбластьМакета.Параметры.Сотрудник = СклонениеПредставленийОбъектов.ПросклонятьФИО(ДанныеДляПечати.Сотрудник, 5, ,2);
		Иначе
			ОбластьМакета.Параметры.Сотрудник = СклонениеПредставленийОбъектов.ПросклонятьФИО(ДанныеДляПечати.Сотрудник, 5, ,1); 
		КонецЕсли;

		ОбластьМакета.Параметры.НомерДоговора = ЗарплатаКадрыОтчеты.НомерНаПечать(ДанныеДляПечати.НомерДоговора, ДанныеДляПечати.НомерПервичногоДокумента);
		ОбластьМакета.Параметры.ДатаДокумента = Формат(ДанныеДляПечати.ДатаДокумента, "ДЛФ=DD");
		ОбластьМакета.Параметры.ДатаДоговора = Формат(ДанныеДляПечати.ДатаДоговора, "ДЛФ=DD");
		
		ДокументРезультат.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, НомерСтрокиНачало, ОбъектыПечати, ДанныеДляПечати.Ссылка);
		
	КонецЦикла;
	
	
	Возврат ДокументРезультат;
	
	
КонецФункции  

Функция ДанныеДляПечатиАктаСдачиПриемаВыполненныхРаботУслуг(МассивОбъектов)
	
	Если  ТипЗнч(МассивОбъектов) = Тип("ДокументСсылка.ДоговорРаботыУслуги")  Тогда 
		Массив = Новый Массив;
		Массив.Добавить(МассивОбъектов);
		МассивОбъектов  = Массив;
	КонецЕсли;
	
	Если МассивОбъектов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.АктПриемкиВыполненныхРаботОказанныхУслуг") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Ссылка КАК Ссылка,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Организация КАК Организация,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Дата КАК Дата,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Дата КАК ДатаДокумента,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Номер КАК НомерДокумента,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Сотрудник КАК Сотрудник,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.ФизическоеЛицо КАК ФизическоеЛицо,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Руководитель КАК Руководитель,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.МесяцНачисления КАК Период,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Договор.Номер КАК НомерДоговора,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Договор.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Договор.Дата КАК ДатаДоговора,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Договор.ДатаОкончания КАК ДатаОкончания,
		|	ЛОЖЬ КАК ОплатаПоАктамВыполненныхРабот,
		|	ВЫБОР
		|		КОГДА Организации.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА Организации.Наименование
		|		ИНАЧЕ Организации.НаименованиеПолное
		|	КОНЕЦ КАК НазваниеОрганизации,
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Результат КАК СуммаЗаРаботу
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	Документ.АктПриемкиВыполненныхРаботОказанныхУслуг КАК АктПриемкиВыполненныхРаботОказанныхУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО АктПриемкиВыполненныхРаботОказанныхУслуг.Организация = Организации.Ссылка
		|ГДЕ
		|	АктПриемкиВыполненныхРаботОказанныхУслуг.Ссылка В(&МассивОбъектов)";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорРаботыУслуги.Ссылка КАК Ссылка,
		|	ДоговорРаботыУслуги.Организация КАК Организация,
		|	ДоговорРаботыУслуги.Дата КАК Дата,
		|	ДоговорРаботыУслуги.Дата КАК ДатаДокумента,
		|	ДоговорРаботыУслуги.Номер КАК НомерДокумента,
		|	ДоговорРаботыУслуги.Сотрудник КАК Сотрудник,
		|	ДоговорРаботыУслуги.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДоговорРаботыУслуги.ДатаНачала КАК Период,
		|	ДоговорРаботыУслуги.Номер КАК НомерДоговора,
		|	ДоговорРаботыУслуги.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
		|	ДоговорРаботыУслуги.Дата КАК ДатаДоговора,
		|	ДоговорРаботыУслуги.Руководитель КАК Руководитель,
		|	ДоговорРаботыУслуги.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ДоговорРаботыУслуги.ДатаОкончания КАК ДатаОкончания,
		|	ВЫБОР
		|		КОГДА ДоговорРаботыУслуги.СпособОплаты = ЗНАЧЕНИЕ(Перечисление.СпособыОплатыПоДоговоруГПХ.ПоАктамВыполненныхРабот)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОплатаПоАктамВыполненныхРабот,
		|	ВЫБОР
		|		КОГДА Организации.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА Организации.Наименование
		|		ИНАЧЕ Организации.НаименованиеПолное
		|	КОНЕЦ КАК НазваниеОрганизации,
		|	ДоговорРаботыУслуги.Сумма КАК СуммаЗаРаботу
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	#ТаблицаДоговоров КАК ДоговорРаботыУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО ДоговорРаботыУслуги.Организация = Организации.Ссылка
		|ГДЕ
		|	ДоговорРаботыУслуги.Ссылка В(&МассивОбъектов)";
	КонецЕсли;
	
	МетаданныеДокумента = МассивОбъектов[0].Метаданные();
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаДоговоров", "Документ." + МетаданныеДокумента.Имя);
	Запрос.Выполнить();
	
	ИменаПолей = Новый Массив;
	ИменаПолей.Добавить("Руководитель");
	ИменаПолей.Добавить("ФизическоеЛицо");
	ЗарплатаКадры.СоздатьВТФИООтветственныхЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ИменаПолей, "ВТДанныеДокумента");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
	Запрос.МенеджерВременныхТаблиц,
	"ВТДанныеДокумента");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "ДокументПредставление,Пол");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ДатаДокумента КАК ДатаДокумента,
	|	ДанныеДокумента.НомерДокумента КАК НомерДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.НазваниеОрганизации КАК НазваниеОрганизации,
	|	ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ФИОСотрудника.РасшифровкаПодписи КАК СотрудникРасшифровкаПодписи,
	|	ДанныеДокумента.Период КАК ДатаНачала,
	|	ДанныеДокумента.ДатаОкончания КАК ДатаОкончания,
	|	ДанныеДокумента.ОплатаПоАктамВыполненныхРабот КАК ОплатаПоАктамВыполненныхРабот,
	|	ДанныеДокумента.СуммаЗаРаботу КАК СуммаЗаРаботу,
	|	ДанныеДокумента.НомерДоговора КАК НомерДоговора,
	|	ДанныеДокумента.НомерПервичногоДокумента КАК НомерПервичногоДокумента,
	|	ДанныеДокумента.ДатаДоговора КАК ДатаДоговора,
	|	КадровыеДанныеСотрудников.ДокументПредставление КАК ДокументПредставление,
	|	КадровыеДанныеСотрудников.Пол КАК Пол,
	|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокумента.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	ДанныеДокумента.Руководитель КАК Руководитель,
	|	ФИОРуководителя.РасшифровкаПодписи КАК РуководительРасшифровкаПодписи
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОСотрудника
	|		ПО ДанныеДокумента.Дата = ФИОСотрудника.Дата
	|			И ДанныеДокумента.Ссылка = ФИОСотрудника.Ссылка
	|			И ДанныеДокумента.ФизическоеЛицо = ФИОСотрудника.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственныхЛиц КАК ФИОРуководителя
	|		ПО ДанныеДокумента.Дата = ФИОРуководителя.Дата
	|			И ДанныеДокумента.Ссылка = ФИОРуководителя.Ссылка
	|			И ДанныеДокумента.Руководитель = ФИОРуководителя.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	|		ПО ДанныеДокумента.Сотрудник = КадровыеДанныеСотрудников.Сотрудник
	|			И ДанныеДокумента.Период = КадровыеДанныеСотрудников.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка";
	
	Возврат Запрос.Выполнить();
	
КонецФункции



